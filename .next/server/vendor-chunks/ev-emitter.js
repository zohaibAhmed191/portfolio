/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ev-emitter";
exports.ids = ["vendor-chunks/ev-emitter"];
exports.modules = {

/***/ "(ssr)/./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */ /* jshint unused: true, undef: true, strict: true */ (function(global, factory) {\n    // universal module definition\n    /* jshint strict: false */ /* globals define, module, window */ if (true) {\n        // AMD - RequireJS\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n})( false ? 0 : this, function() {\n    \"use strict\";\n    function EvEmitter() {}\n    var proto = EvEmitter.prototype;\n    proto.on = function(eventName, listener) {\n        if (!eventName || !listener) {\n            return;\n        }\n        // set events hash\n        var events = this._events = this._events || {};\n        // set listeners array\n        var listeners = events[eventName] = events[eventName] || [];\n        // only add once\n        if (listeners.indexOf(listener) == -1) {\n            listeners.push(listener);\n        }\n        return this;\n    };\n    proto.once = function(eventName, listener) {\n        if (!eventName || !listener) {\n            return;\n        }\n        // add event\n        this.on(eventName, listener);\n        // set once flag\n        // set onceEvents hash\n        var onceEvents = this._onceEvents = this._onceEvents || {};\n        // set onceListeners object\n        var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n        // set flag\n        onceListeners[listener] = true;\n        return this;\n    };\n    proto.off = function(eventName, listener) {\n        var listeners = this._events && this._events[eventName];\n        if (!listeners || !listeners.length) {\n            return;\n        }\n        var index = listeners.indexOf(listener);\n        if (index != -1) {\n            listeners.splice(index, 1);\n        }\n        return this;\n    };\n    proto.emitEvent = function(eventName, args) {\n        var listeners = this._events && this._events[eventName];\n        if (!listeners || !listeners.length) {\n            return;\n        }\n        // copy over to avoid interference if .off() in listener\n        listeners = listeners.slice(0);\n        args = args || [];\n        // once stuff\n        var onceListeners = this._onceEvents && this._onceEvents[eventName];\n        for(var i = 0; i < listeners.length; i++){\n            var listener = listeners[i];\n            var isOnce = onceListeners && onceListeners[listener];\n            if (isOnce) {\n                // remove listener\n                // remove before trigger to prevent recursion\n                this.off(eventName, listener);\n                // unset once flag\n                delete onceListeners[listener];\n            }\n            // trigger listener\n            listener.apply(this, args);\n        }\n        return this;\n    };\n    proto.allOff = function() {\n        delete this._events;\n        delete this._onceEvents;\n    };\n    return EvEmitter;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXYtZW1pdHRlci9ldi1lbWl0dGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7O0NBSUMsR0FFRCxrREFBa0QsR0FFaEQsVUFBVUEsTUFBTSxFQUFFQyxPQUFPO0lBQ3pCLDhCQUE4QjtJQUM5Qix3QkFBd0IsR0FBRyxrQ0FBa0MsR0FDN0QsSUFBSyxJQUF5QyxFQUFHO1FBQy9DLGtCQUFrQjtRQUNsQkMsb0NBQVFELE9BQU9BO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0dBQUFBO0lBQ2pCLE9BQU8sRUFNTjtBQUVILEdBQUcsTUFBaUIsR0FBY00sQ0FBTUEsR0FBRyxJQUFJLEVBQUU7SUFFakQ7SUFFQSxTQUFTRCxhQUFhO0lBRXRCLElBQUlFLFFBQVFGLFVBQVVHLFNBQVM7SUFFL0JELE1BQU1FLEVBQUUsR0FBRyxTQUFVQyxTQUFTLEVBQUVDLFFBQVE7UUFDdEMsSUFBSyxDQUFDRCxhQUFhLENBQUNDLFVBQVc7WUFDN0I7UUFDRjtRQUNBLGtCQUFrQjtRQUNsQixJQUFJQyxTQUFTLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUksQ0FBQ0EsT0FBTyxJQUFJLENBQUM7UUFDN0Msc0JBQXNCO1FBQ3RCLElBQUlDLFlBQVlGLE1BQU0sQ0FBRUYsVUFBVyxHQUFHRSxNQUFNLENBQUVGLFVBQVcsSUFBSSxFQUFFO1FBQy9ELGdCQUFnQjtRQUNoQixJQUFLSSxVQUFVQyxPQUFPLENBQUVKLGFBQWMsQ0FBQyxHQUFJO1lBQ3pDRyxVQUFVRSxJQUFJLENBQUVMO1FBQ2xCO1FBRUEsT0FBTyxJQUFJO0lBQ2I7SUFFQUosTUFBTVUsSUFBSSxHQUFHLFNBQVVQLFNBQVMsRUFBRUMsUUFBUTtRQUN4QyxJQUFLLENBQUNELGFBQWEsQ0FBQ0MsVUFBVztZQUM3QjtRQUNGO1FBQ0EsWUFBWTtRQUNaLElBQUksQ0FBQ0YsRUFBRSxDQUFFQyxXQUFXQztRQUNwQixnQkFBZ0I7UUFDaEIsc0JBQXNCO1FBQ3RCLElBQUlPLGFBQWEsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSSxDQUFDQSxXQUFXLElBQUksQ0FBQztRQUN6RCwyQkFBMkI7UUFDM0IsSUFBSUMsZ0JBQWdCRixVQUFVLENBQUVSLFVBQVcsR0FBR1EsVUFBVSxDQUFFUixVQUFXLElBQUksQ0FBQztRQUMxRSxXQUFXO1FBQ1hVLGFBQWEsQ0FBRVQsU0FBVSxHQUFHO1FBRTVCLE9BQU8sSUFBSTtJQUNiO0lBRUFKLE1BQU1jLEdBQUcsR0FBRyxTQUFVWCxTQUFTLEVBQUVDLFFBQVE7UUFDdkMsSUFBSUcsWUFBWSxJQUFJLENBQUNELE9BQU8sSUFBSSxJQUFJLENBQUNBLE9BQU8sQ0FBRUgsVUFBVztRQUN6RCxJQUFLLENBQUNJLGFBQWEsQ0FBQ0EsVUFBVVEsTUFBTSxFQUFHO1lBQ3JDO1FBQ0Y7UUFDQSxJQUFJQyxRQUFRVCxVQUFVQyxPQUFPLENBQUVKO1FBQy9CLElBQUtZLFNBQVMsQ0FBQyxHQUFJO1lBQ2pCVCxVQUFVVSxNQUFNLENBQUVELE9BQU87UUFDM0I7UUFFQSxPQUFPLElBQUk7SUFDYjtJQUVBaEIsTUFBTWtCLFNBQVMsR0FBRyxTQUFVZixTQUFTLEVBQUVnQixJQUFJO1FBQ3pDLElBQUlaLFlBQVksSUFBSSxDQUFDRCxPQUFPLElBQUksSUFBSSxDQUFDQSxPQUFPLENBQUVILFVBQVc7UUFDekQsSUFBSyxDQUFDSSxhQUFhLENBQUNBLFVBQVVRLE1BQU0sRUFBRztZQUNyQztRQUNGO1FBQ0Esd0RBQXdEO1FBQ3hEUixZQUFZQSxVQUFVYSxLQUFLLENBQUM7UUFDNUJELE9BQU9BLFFBQVEsRUFBRTtRQUNqQixhQUFhO1FBQ2IsSUFBSU4sZ0JBQWdCLElBQUksQ0FBQ0QsV0FBVyxJQUFJLElBQUksQ0FBQ0EsV0FBVyxDQUFFVCxVQUFXO1FBRXJFLElBQU0sSUFBSWtCLElBQUUsR0FBR0EsSUFBSWQsVUFBVVEsTUFBTSxFQUFFTSxJQUFNO1lBQ3pDLElBQUlqQixXQUFXRyxTQUFTLENBQUNjLEVBQUU7WUFDM0IsSUFBSUMsU0FBU1QsaUJBQWlCQSxhQUFhLENBQUVULFNBQVU7WUFDdkQsSUFBS2tCLFFBQVM7Z0JBQ1osa0JBQWtCO2dCQUNsQiw2Q0FBNkM7Z0JBQzdDLElBQUksQ0FBQ1IsR0FBRyxDQUFFWCxXQUFXQztnQkFDckIsa0JBQWtCO2dCQUNsQixPQUFPUyxhQUFhLENBQUVULFNBQVU7WUFDbEM7WUFDQSxtQkFBbUI7WUFDbkJBLFNBQVNtQixLQUFLLENBQUUsSUFBSSxFQUFFSjtRQUN4QjtRQUVBLE9BQU8sSUFBSTtJQUNiO0lBRUFuQixNQUFNd0IsTUFBTSxHQUFHO1FBQ2IsT0FBTyxJQUFJLENBQUNsQixPQUFPO1FBQ25CLE9BQU8sSUFBSSxDQUFDTSxXQUFXO0lBQ3pCO0lBRUEsT0FBT2Q7QUFFUCIsInNvdXJjZXMiOlsid2VicGFjazovL25veGZvbGlvLy4vbm9kZV9tb2R1bGVzL2V2LWVtaXR0ZXIvZXYtZW1pdHRlci5qcz9mYmNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXZFbWl0dGVyIHYxLjEuMFxuICogTGlsJyBldmVudCBlbWl0dGVyXG4gKiBNSVQgTGljZW5zZVxuICovXG5cbi8qIGpzaGludCB1bnVzZWQ6IHRydWUsIHVuZGVmOiB0cnVlLCBzdHJpY3Q6IHRydWUgKi9cblxuKCBmdW5jdGlvbiggZ2xvYmFsLCBmYWN0b3J5ICkge1xuICAvLyB1bml2ZXJzYWwgbW9kdWxlIGRlZmluaXRpb25cbiAgLyoganNoaW50IHN0cmljdDogZmFsc2UgKi8gLyogZ2xvYmFscyBkZWZpbmUsIG1vZHVsZSwgd2luZG93ICovXG4gIGlmICggdHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgKSB7XG4gICAgLy8gQU1EIC0gUmVxdWlyZUpTXG4gICAgZGVmaW5lKCBmYWN0b3J5ICk7XG4gIH0gZWxzZSBpZiAoIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG4gICAgLy8gQ29tbW9uSlMgLSBCcm93c2VyaWZ5LCBXZWJwYWNrXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gQnJvd3NlciBnbG9iYWxzXG4gICAgZ2xvYmFsLkV2RW1pdHRlciA9IGZhY3RvcnkoKTtcbiAgfVxuXG59KCB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBFdkVtaXR0ZXIoKSB7fVxuXG52YXIgcHJvdG8gPSBFdkVtaXR0ZXIucHJvdG90eXBlO1xuXG5wcm90by5vbiA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBzZXQgZXZlbnRzIGhhc2hcbiAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IGxpc3RlbmVycyBhcnJheVxuICB2YXIgbGlzdGVuZXJzID0gZXZlbnRzWyBldmVudE5hbWUgXSA9IGV2ZW50c1sgZXZlbnROYW1lIF0gfHwgW107XG4gIC8vIG9ubHkgYWRkIG9uY2VcbiAgaWYgKCBsaXN0ZW5lcnMuaW5kZXhPZiggbGlzdGVuZXIgKSA9PSAtMSApIHtcbiAgICBsaXN0ZW5lcnMucHVzaCggbGlzdGVuZXIgKTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxucHJvdG8ub25jZSA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGxpc3RlbmVyICkge1xuICBpZiAoICFldmVudE5hbWUgfHwgIWxpc3RlbmVyICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBhZGQgZXZlbnRcbiAgdGhpcy5vbiggZXZlbnROYW1lLCBsaXN0ZW5lciApO1xuICAvLyBzZXQgb25jZSBmbGFnXG4gIC8vIHNldCBvbmNlRXZlbnRzIGhhc2hcbiAgdmFyIG9uY2VFdmVudHMgPSB0aGlzLl9vbmNlRXZlbnRzID0gdGhpcy5fb25jZUV2ZW50cyB8fCB7fTtcbiAgLy8gc2V0IG9uY2VMaXN0ZW5lcnMgb2JqZWN0XG4gIHZhciBvbmNlTGlzdGVuZXJzID0gb25jZUV2ZW50c1sgZXZlbnROYW1lIF0gPSBvbmNlRXZlbnRzWyBldmVudE5hbWUgXSB8fCB7fTtcbiAgLy8gc2V0IGZsYWdcbiAgb25jZUxpc3RlbmVyc1sgbGlzdGVuZXIgXSA9IHRydWU7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5vZmYgPSBmdW5jdGlvbiggZXZlbnROYW1lLCBsaXN0ZW5lciApIHtcbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50cyAmJiB0aGlzLl9ldmVudHNbIGV2ZW50TmFtZSBdO1xuICBpZiAoICFsaXN0ZW5lcnMgfHwgIWxpc3RlbmVycy5sZW5ndGggKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpbmRleCA9IGxpc3RlbmVycy5pbmRleE9mKCBsaXN0ZW5lciApO1xuICBpZiAoIGluZGV4ICE9IC0xICkge1xuICAgIGxpc3RlbmVycy5zcGxpY2UoIGluZGV4LCAxICk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbnByb3RvLmVtaXRFdmVudCA9IGZ1bmN0aW9uKCBldmVudE5hbWUsIGFyZ3MgKSB7XG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHMgJiYgdGhpcy5fZXZlbnRzWyBldmVudE5hbWUgXTtcbiAgaWYgKCAhbGlzdGVuZXJzIHx8ICFsaXN0ZW5lcnMubGVuZ3RoICkge1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBjb3B5IG92ZXIgdG8gYXZvaWQgaW50ZXJmZXJlbmNlIGlmIC5vZmYoKSBpbiBsaXN0ZW5lclxuICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuc2xpY2UoMCk7XG4gIGFyZ3MgPSBhcmdzIHx8IFtdO1xuICAvLyBvbmNlIHN0dWZmXG4gIHZhciBvbmNlTGlzdGVuZXJzID0gdGhpcy5fb25jZUV2ZW50cyAmJiB0aGlzLl9vbmNlRXZlbnRzWyBldmVudE5hbWUgXTtcblxuICBmb3IgKCB2YXIgaT0wOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrICkge1xuICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXVxuICAgIHZhciBpc09uY2UgPSBvbmNlTGlzdGVuZXJzICYmIG9uY2VMaXN0ZW5lcnNbIGxpc3RlbmVyIF07XG4gICAgaWYgKCBpc09uY2UgKSB7XG4gICAgICAvLyByZW1vdmUgbGlzdGVuZXJcbiAgICAgIC8vIHJlbW92ZSBiZWZvcmUgdHJpZ2dlciB0byBwcmV2ZW50IHJlY3Vyc2lvblxuICAgICAgdGhpcy5vZmYoIGV2ZW50TmFtZSwgbGlzdGVuZXIgKTtcbiAgICAgIC8vIHVuc2V0IG9uY2UgZmxhZ1xuICAgICAgZGVsZXRlIG9uY2VMaXN0ZW5lcnNbIGxpc3RlbmVyIF07XG4gICAgfVxuICAgIC8vIHRyaWdnZXIgbGlzdGVuZXJcbiAgICBsaXN0ZW5lci5hcHBseSggdGhpcywgYXJncyApO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5wcm90by5hbGxPZmYgPSBmdW5jdGlvbigpIHtcbiAgZGVsZXRlIHRoaXMuX2V2ZW50cztcbiAgZGVsZXRlIHRoaXMuX29uY2VFdmVudHM7XG59O1xuXG5yZXR1cm4gRXZFbWl0dGVyO1xuXG59KSk7XG4iXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJFdkVtaXR0ZXIiLCJ3aW5kb3ciLCJwcm90byIsInByb3RvdHlwZSIsIm9uIiwiZXZlbnROYW1lIiwibGlzdGVuZXIiLCJldmVudHMiLCJfZXZlbnRzIiwibGlzdGVuZXJzIiwiaW5kZXhPZiIsInB1c2giLCJvbmNlIiwib25jZUV2ZW50cyIsIl9vbmNlRXZlbnRzIiwib25jZUxpc3RlbmVycyIsIm9mZiIsImxlbmd0aCIsImluZGV4Iiwic3BsaWNlIiwiZW1pdEV2ZW50IiwiYXJncyIsInNsaWNlIiwiaSIsImlzT25jZSIsImFwcGx5IiwiYWxsT2ZmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ev-emitter/ev-emitter.js\n");

/***/ })

};
;