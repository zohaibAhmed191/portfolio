/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/get-size";
exports.ids = ["vendor-chunks/get-size"];
exports.modules = {

/***/ "(ssr)/./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */ /* jshint browser: true, strict: true, undef: true, unused: true */ /* globals console: false */ (function(window1, factory) {\n    /* jshint strict: false */ /* globals define, module */ if (true) {\n        // AMD\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n})(window, function factory() {\n    \"use strict\";\n    // -------------------------- helpers -------------------------- //\n    // get a number from a string, not a percentage\n    function getStyleSize(value) {\n        var num = parseFloat(value);\n        // not a percent like '100%', and a number\n        var isValid = value.indexOf(\"%\") == -1 && !isNaN(num);\n        return isValid && num;\n    }\n    function noop() {}\n    var logError = typeof console == \"undefined\" ? noop : function(message) {\n        console.error(message);\n    };\n    // -------------------------- measurements -------------------------- //\n    var measurements = [\n        \"paddingLeft\",\n        \"paddingRight\",\n        \"paddingTop\",\n        \"paddingBottom\",\n        \"marginLeft\",\n        \"marginRight\",\n        \"marginTop\",\n        \"marginBottom\",\n        \"borderLeftWidth\",\n        \"borderRightWidth\",\n        \"borderTopWidth\",\n        \"borderBottomWidth\"\n    ];\n    var measurementsLength = measurements.length;\n    function getZeroSize() {\n        var size = {\n            width: 0,\n            height: 0,\n            innerWidth: 0,\n            innerHeight: 0,\n            outerWidth: 0,\n            outerHeight: 0\n        };\n        for(var i = 0; i < measurementsLength; i++){\n            var measurement = measurements[i];\n            size[measurement] = 0;\n        }\n        return size;\n    }\n    // -------------------------- getStyle -------------------------- //\n    /**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */ function getStyle(elem) {\n        var style = getComputedStyle(elem);\n        if (!style) {\n            logError(\"Style returned \" + style + \". Are you running this code in a hidden iframe on Firefox? \" + \"See https://bit.ly/getsizebug1\");\n        }\n        return style;\n    }\n    // -------------------------- setup -------------------------- //\n    var isSetup = false;\n    var isBoxSizeOuter;\n    /**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */ function setup() {\n        // setup once\n        if (isSetup) {\n            return;\n        }\n        isSetup = true;\n        // -------------------------- box sizing -------------------------- //\n        /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */ var div = document.createElement(\"div\");\n        div.style.width = \"200px\";\n        div.style.padding = \"1px 2px 3px 4px\";\n        div.style.borderStyle = \"solid\";\n        div.style.borderWidth = \"1px 2px 3px 4px\";\n        div.style.boxSizing = \"border-box\";\n        var body = document.body || document.documentElement;\n        body.appendChild(div);\n        var style = getStyle(div);\n        // round value for browser zoom. desandro/masonry#928\n        isBoxSizeOuter = Math.round(getStyleSize(style.width)) == 200;\n        getSize.isBoxSizeOuter = isBoxSizeOuter;\n        body.removeChild(div);\n    }\n    // -------------------------- getSize -------------------------- //\n    function getSize(elem) {\n        setup();\n        // use querySeletor if elem is string\n        if (typeof elem == \"string\") {\n            elem = document.querySelector(elem);\n        }\n        // do not proceed on non-objects\n        if (!elem || typeof elem != \"object\" || !elem.nodeType) {\n            return;\n        }\n        var style = getStyle(elem);\n        // if hidden, everything is 0\n        if (style.display == \"none\") {\n            return getZeroSize();\n        }\n        var size = {};\n        size.width = elem.offsetWidth;\n        size.height = elem.offsetHeight;\n        var isBorderBox = size.isBorderBox = style.boxSizing == \"border-box\";\n        // get all measurements\n        for(var i = 0; i < measurementsLength; i++){\n            var measurement = measurements[i];\n            var value = style[measurement];\n            var num = parseFloat(value);\n            // any 'auto', 'medium' value will be 0\n            size[measurement] = !isNaN(num) ? num : 0;\n        }\n        var paddingWidth = size.paddingLeft + size.paddingRight;\n        var paddingHeight = size.paddingTop + size.paddingBottom;\n        var marginWidth = size.marginLeft + size.marginRight;\n        var marginHeight = size.marginTop + size.marginBottom;\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n        // overwrite width and height if we can get it from style\n        var styleWidth = getStyleSize(style.width);\n        if (styleWidth !== false) {\n            size.width = styleWidth + // add padding and border unless it's already including it\n            (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\n        }\n        var styleHeight = getStyleSize(style.height);\n        if (styleHeight !== false) {\n            size.height = styleHeight + // add padding and border unless it's already including it\n            (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\n        }\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\n        size.outerWidth = size.width + marginWidth;\n        size.outerHeight = size.height + marginHeight;\n        return size;\n    }\n    return getSize;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/get-size/get-size.js\n");

/***/ })

};
;